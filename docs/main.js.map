{"version":3,"sources":["./src/app/operations.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/screen/screen.component.ts","./src/app/screen/screen.component.html","./src/app/app.module.ts","./src/app/button/button.component.ts","./src/app/button/button.component.html","./src/app/app-routing.module.ts","./src/app/keyboard/keyboard.component.html","./src/app/keyboard/keyboard.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, ÉµCompiler_compileModuleAndAllComponentsAsync__POST_R3__ } from '@angular/core';\nimport CalcKey from './CalcTypes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationsService {\n\n  constructor() {  }\n\n  actualOperation = null;\n\n  operand = '';\n\n  actualResult = '';\n\n  getResult() {\n    return this.actualResult;\n  }\n\n  getOperation() {\n    if (this.actualOperation == this.addition) {\n      return '+';\n    } else if (this.actualOperation == this.subtraction) {\n      return '-';\n    } else if (this.actualOperation == this.multiplication) {\n      return '*';\n    } else if (this.actualOperation == this.division) {\n      return '/';\n    }\n  }\n\n  getOperand() {\n    return this.operand;\n  }\n\n  addition(term1: string, term2: string) {\n    return Number(term1) + Number(term2);\n  }\n\n  subtraction(minuend: string, subtrahend: string) {\n    return Number(minuend) - Number(subtrahend);\n  }\n\n  division(dividend: string, divisior: string) {\n    return Number(dividend)/Number(divisior);\n  }\n\n  multiplication(multiplier1: string, multiplier2) {\n    return Number(multiplier1) * Number(multiplier2);\n  }\n\n  getKey(key: CalcKey) {\n    if ( /^\\d+$/.test(key) && !this.actualOperation) {\n      this.actualResult += key;\n    } else if (key == '+') {\n      this.actualOperation = this.addition;\n    } else if (key == '-') {\n      this.actualOperation = this.subtraction;\n    } else if (key == '/') {\n      this.actualOperation = this.division;\n    } else if (key == '*') {\n      this.actualOperation = this.multiplication;\n    } else if (/^\\d+$/.test(key)) {\n      this.operand += key;\n    } else if (key == '=') {\n      this.actualResult = this.actualOperation(this.actualResult, this.operand);\n      this.actualOperation = null;\n      this.operand = '';\n    } else if (key == 'C') {\n      this.actualResult = '';\n      this.operand = '';\n      this.actualOperation = null;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'calculator';\n}\n","<div class=\"calculator\">\n<app-screen></app-screen>\n<app-keyboard></app-keyboard>\n<router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { OperationsService } from '../operations.service';\n\n@Component({\n  selector: 'app-screen',\n  templateUrl: './screen.component.html',\n  styleUrls: ['./screen.component.scss']\n})\nexport class ScreenComponent implements OnInit {\n\n  constructor(\n    private service: OperationsService\n  ) {}\n\n  actualResult = this.service.getResult();\n\n  actualOperation = this.service.getOperation();\n\n  operand = this.service.getOperand();\n\n  ngOnInit(): void {\n  }\n\n  ngDoCheck() {\n    if (this.service.getResult() != this.actualResult ||\n     this.service.getOperation() != this.actualOperation ||\n      this.service.getOperand() != this.operand) {\n      this.actualResult = this.service.getResult();\n      this.actualOperation = this.service.getOperation();\n      this.operand = this.service.getOperand();\n    }\n  }\n\n}\n","<div class=\"screen\">\n    {{ [actualResult, actualOperation, operand].join(' ') }}\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ButtonComponent } from './button/button.component';\nimport { KeyboardComponent } from './keyboard/keyboard.component';\nimport { ScreenComponent } from './screen/screen.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n    KeyboardComponent,\n    ScreenComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { OperationsService } from '../operations.service';\nimport CalcKey from '../CalcTypes';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  constructor(\n    private service: OperationsService\n  ) { }\n\n  @Input() key: CalcKey;\n\n  click() {\n    this.service.getKey(this.key)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"button-container\">\n    <button class=\"{{ key == 'C' ? 'cancel' : (key == '=' || key == '/' || key == '*' || key == '-' || key == '+') ? 'operation' : '' }}\" (click)=\" click() \" >\n        {{ key }}\n    </button>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"keyboard\">\n    <div class=\"keyboard-row\" *ngFor=\" let row of keys; index as i \">\n        <app-button class=\"{{ keys[i][j] == 'C' ? 'cancel' : '' }}\" *ngFor=\" let key of row; index as j \" [key]=\" keys[i][j] \"></app-button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport CalcKey  from '../CalcTypes';\n \n@Component({\n  selector: 'app-keyboard',\n  templateUrl: './keyboard.component.html',\n  styleUrls: ['./keyboard.component.scss']\n})\nexport class KeyboardComponent implements OnInit {\n\n  constructor() { }\n\n  keys: Array<Array<CalcKey>> = [\n    ['7','8','9','+'],\n    ['4','5','6','-'],\n    ['1','2','3','*'],\n    ['C','0','=','/']\n  ]\n\n  ngOnInit(): void {\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}